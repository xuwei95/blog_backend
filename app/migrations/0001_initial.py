# Generated by Django 2.1.2 on 2018-12-01 15:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(max_length=30, verbose_name='昵称')),
                ('sex', models.SmallIntegerField(default=1)),
                ('phone_number', models.CharField(max_length=30, verbose_name='手机号')),
                ('note', models.CharField(max_length=200, verbose_name='备注')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Artical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewers', models.PositiveIntegerField(default=0, verbose_name='访问量')),
                ('title', models.CharField(max_length=30, verbose_name='标题')),
                ('author', models.CharField(default='Drew', max_length=20, verbose_name='作者')),
                ('content', models.TextField(verbose_name='正文')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='发布时间')),
                ('is_public', models.SmallIntegerField(default=1, verbose_name='是否公开')),
                ('is_delete', models.SmallIntegerField(default=0, verbose_name='是否被删除')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='分类')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='内容')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='评论时间')),
                ('artical', models.ForeignKey(on_delete=True, to='app.Artical', verbose_name='文章')),
                ('user', models.ForeignKey(on_delete=True, to=settings.AUTH_USER_MODEL, verbose_name='评论者')),
            ],
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friend', models.URLField(blank=True, verbose_name='链接')),
                ('name', models.CharField(max_length=30, verbose_name='名称')),
            ],
            options={
                'verbose_name': '友链',
                'verbose_name_plural': '友链',
            },
        ),
        migrations.CreateModel(
            name='Mail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=30, verbose_name='服务器')),
                ('port', models.CharField(max_length=30, verbose_name='端口')),
                ('email', models.CharField(max_length=30, verbose_name='发件人邮箱')),
                ('nickname', models.CharField(max_length=30, verbose_name='发件人昵称')),
                ('password', models.CharField(max_length=30, verbose_name='邮箱登录密码')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='角色名')),
                ('permissions', models.IntegerField(default=1, verbose_name='权限等级')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='System_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('behavior', models.CharField(max_length=30, verbose_name='行为')),
                ('ip', models.CharField(max_length=30, verbose_name='ip地址')),
                ('time', models.DateTimeField(auto_now=True, verbose_name='操作时间')),
                ('user', models.ForeignKey(on_delete=True, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='标签')),
            ],
        ),
        migrations.CreateModel(
            name='User_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('behavior', models.CharField(max_length=30, verbose_name='行为')),
                ('ip', models.CharField(max_length=30, verbose_name='ip地址')),
                ('region', models.CharField(max_length=30, verbose_name='地区')),
                ('source', models.CharField(max_length=30, verbose_name='来源')),
                ('time', models.DateTimeField(auto_now=True, verbose_name='操作时间')),
                ('user', models.ForeignKey(on_delete=True, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='网站名称')),
                ('domain', models.CharField(max_length=30, verbose_name='域名')),
                ('max_upload', models.IntegerField(default=2048, verbose_name='最大文件上传')),
                ('title', models.CharField(max_length=30, verbose_name='首页标题')),
                ('describe', models.CharField(max_length=200, verbose_name='描述')),
                ('information', models.CharField(max_length=100, verbose_name='版权信息')),
            ],
        ),
        migrations.AddField(
            model_name='artical',
            name='category',
            field=models.ForeignKey(on_delete=True, to='app.Category', verbose_name='分类'),
        ),
        migrations.AddField(
            model_name='artical',
            name='tag',
            field=models.ManyToManyField(to='app.Tag', verbose_name='标签'),
        ),
    ]
